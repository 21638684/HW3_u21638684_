@model HW3_u21638684.Models.MaintainVM
@{
    ViewBag.Title = "Maintain";
}
    <div class="container mt-5">
        <div class="row mb-3">
            <div class="col-md-6">
                <h3>Authors</h3>
                 <a href="#" class="btn btn-success create-link" data-url="@Url.Action("Create", "authors")">Create</a>
            
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Author ID</th>
                            <th>Name</th>
                            <th>Surname</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var author in Model.Authors)
                        {
                            <tr>
                                <td>@author.authorId</td>
                                <td>@author.name</td>
                                <td>@author.surname</td>
                                <td>
                                    <a href="#" class="btn btn-warning edit-link" data-url="@Url.Action("Edit", "authors", new { id = author.authorId})">Edit</a>
                                    <a href="#" class="btn btn-info details-link" data-url="@Url.Action("Details", "authors", new { id = author.authorId })">Details</a>
                                    <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "authors", new { id = author.authorId})">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <nav aria-label="...">
                    <ul class="pagination">
                        @if (Model.Authors.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { authorPage = Model.Authors.PageNumber - 1 })" aria-label="Previous">
                                    <span aria-hidden="true">Previous</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">Previous</a>
                            </li>
                        }

                        @if (Model.Authors.PageNumber > 10)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { authorPage = 1 })">1</a>
                            </li>
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">...</a>
                            </li>
                        }

                        @{
                            var startPage = Model.Authors.PageNumber > 10 ? Model.Authors.PageNumber - 4 : 1;
                            var endPage = Math.Min(startPage + 9, Model.Authors.PageCount);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.Authors.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Maintain", new { authorPage = i })">@i</a>
                            </li>
                        }

                        @if (Model.Authors.PageNumber + 10 <= Model.Authors.PageCount)
                        {
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">...</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { authorPage = Model.Authors.PageCount })">@Model.Authors.PageCount</a>
                            </li>
                        }

                        @if (Model.Authors.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { authorPage = Model.Authors.PageNumber + 1 })" aria-label="Next">
                                    <span aria-hidden="true">Next</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
            <div class="col-md-6">
                <h3>Types</h3>
                <a href="#" class="btn btn-success create-link" data-url="@Url.Action("Create", "types")">Create</a>

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Type ID</th>
                            <th>Name</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var type in Model.Types)
                        {
                            <tr>
                                <td>@type.typeId</td>
                                <td>@type.name</td>
                                <td>
                                    <a href="#" class="btn btn-warning edit-link" data-url="@Url.Action("Edit", "types", new { id = type.typeId})">Edit</a>
                                    <a href="#" class="btn btn-info details-link" data-url="@Url.Action("Details", "types", new { id =type.typeId })">Details</a>
                                    <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "types", new { id = type.typeId})">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <nav aria-label="...">
                    <ul class="pagination">
                        @if (Model.Types.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { typePage = Model.Authors.PageNumber - 1 })" aria-label="Previous">
                                    <span aria-hidden="true">Previous</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">Previous</a>
                            </li>
                        }

                        @if (Model.Types.PageNumber > 10)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { typePage = 1 })">1</a>
                            </li>
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">...</a>
                            </li>
                        }

                        @{
                            var beginPage = Model.Types.PageNumber > 10 ? Model.Types.PageNumber - 4 : 1;
                            var finishPage = Math.Min(beginPage + 9, Model.Types.PageCount);
                        }

                        @for (var i = beginPage; i <= finishPage; i++)
                        {
                            <li class="page-item @(i == Model.Types.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Maintain", new { typePage= i })">@i</a>
                            </li>
                        }

                        @if (Model.Types.PageNumber + 10 <= Model.Types.PageCount)
                        {
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">...</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { typePage = Model.Types.PageCount })">@Model.Types.PageCount</a>
                            </li>
                        }

                        @if (Model.Types.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Maintain", new { typePage = Model.Types.PageNumber + 1 })" aria-label="Next">
                                    <span aria-hidden="true">Next</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" tabindex="-1" aria-disabled="true">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
                </div>
            </div>
        </div>
<div class="container mt-5">
    <div class="row mb-3">
        <div class="col-6">
            <h2>Borrows</h2>
            <a href="#" class="btn btn-success create-link" data-url="@Url.Action("Create", "borrows")">Create</a>
     
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>BorrowID</th>
                <th>Student Name</th>
                <th>Book Name</th>
                <th>Taken Date</th>
                <th>Brought Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var borrow in Model.Borrows)
            {
                <tr>
                    <td>@borrow.borrowId</td>
                    <td>@borrow.student.name</td>
                    <td>@borrow.book.name</td>
                    <td>@borrow.takenDate</td>
                    <td>@borrow.broughtDate</td>
                    <td>
                        <a href="#" class="btn btn-warning edit-link" data-url="@Url.Action("Edit", "borrows", new { id =borrow.borrowId})">Edit</a>
                        <a href="#" class="btn btn-info details-link" data-url="@Url.Action("Details", "borrows", new { id = borrow.borrowId })">Details</a>
                        <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "borrows", new { id = borrow.borrowId})">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="...">
        <ul class="pagination">
            @if (Model.Borrows.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Maintain", new { borrowPage = Model.Borrows.PageNumber - 1 })" aria-label="Previous">
                        <span aria-hidden="true">Previous</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" tabindex="-1" aria-disabled="true">Previous</a>
                </li>
            }

            @if (Model.Borrows.PageNumber > 10)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Maintain", new { borrowPage = 1 })">1</a>
                </li>
                <li class="page-item disabled">
                    <a class="page-link" tabindex="-1" aria-disabled="true">...</a>
                </li>
            }

            @{
                var initialPage = Model.Borrows.PageNumber > 10 ? Model.Borrows.PageNumber - 4 : 1;
                var completePage = Math.Min(initialPage + 9, Model.Borrows.PageCount);
            }

            @for (var i = initialPage; i <= completePage; i++)
            {
                <li class="page-item @(i == Model.Borrows.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Maintain", new { borrowPage = i })">@i</a>
                </li>
            }

            @if (Model.Borrows.PageNumber + 10 <= Model.Borrows.PageCount)
            {
                <li class="page-item disabled">
                    <a class="page-link" tabindex="-1" aria-disabled="true">...</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Maintain", new { borrowPage = Model.Borrows.PageCount })">@Model.Borrows.PageCount</a>
                </li>
            }

            @if (Model.Borrows.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Maintain", new { borrowPage = Model.Borrows.PageNumber + 1 })" aria-label="Next">
                        <span aria-hidden="true">Next</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" tabindex="-1" aria-disabled="true">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>
</div>
@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Your JavaScript code remains unchanged.
        $(function () {
            // Function to handle Edit link click event
            $(".edit-link").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                $.get(url, function (data) {
                    $("#modal-content").empty();
                    $("#modal-content").html(data);
                    $("#myModal").modal("show");
                });
            });

            // Function to handle form submission within the modal
            $("#modal-content").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                var url = form.attr("action");
                var formData = form.serialize();

                $.post(url, formData, function (data) {
                    $("#myModal").modal("hide");
                    location.reload();
                });
            });

            // Function to handle other links (details, delete, create) within the modal
            $(".details-link, .delete-link, .create-link, .create-lookup-link").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                $.get(url, function (data) {
                    $("#modal-content").empty();
                    $("#modal-content").html(data);
                    $("#myModal").modal("show");
                });
            });
        });
    </script>
}

